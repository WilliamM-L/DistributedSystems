package com.DistributedSystems.asg2.RoomRecordsObj;


/**
* RoomRecordsObj/RoomRecordsCorbaPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from RoomRecords.idl
* Monday, October 18, 2021 9:05:05 o'clock PM EDT
*/

public abstract class RoomRecordsCorbaPOA extends org.omg.PortableServer.Servant
 implements RoomRecordsCorbaOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("createRoom", new java.lang.Integer (0));
    _methods.put ("deleteRoom", new java.lang.Integer (1));
    _methods.put ("bookRoom", new java.lang.Integer (2));
    _methods.put ("getAvailableTimeSlot", new java.lang.Integer (3));
    _methods.put ("cancelBooking", new java.lang.Integer (4));
    _methods.put ("changeReservation", new java.lang.Integer (5));
    _methods.put ("shutdown", new java.lang.Integer (6));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // RoomRecordsObj/RoomRecordsCorba/createRoom
       {
         int room_Number = in.read_long ();
         String date = in.read_string ();
         String list_Of_Time_Slots = in.read_string ();
         String userID = in.read_string ();
         String $result = null;
         $result = this.createRoom (room_Number, date, list_Of_Time_Slots, userID);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // RoomRecordsObj/RoomRecordsCorba/deleteRoom
       {
         int room_Number = in.read_long ();
         String date = in.read_string ();
         String list_Of_Time_Slots = in.read_string ();
         String userID = in.read_string ();
         String $result = null;
         $result = this.deleteRoom (room_Number, date, list_Of_Time_Slots, userID);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // RoomRecordsObj/RoomRecordsCorba/bookRoom
       {
         String campusName = in.read_string ();
         int roomNumber = in.read_long ();
         String date = in.read_string ();
         String timeslot = in.read_string ();
         String userID = in.read_string ();
         String $result = null;
         $result = this.bookRoom (campusName, roomNumber, date, timeslot, userID);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // RoomRecordsObj/RoomRecordsCorba/getAvailableTimeSlot
       {
         String dateText = in.read_string ();
         String userID = in.read_string ();
         String $result = null;
         $result = this.getAvailableTimeSlot (dateText, userID);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // RoomRecordsObj/RoomRecordsCorba/cancelBooking
       {
         String bookingID = in.read_string ();
         String userID = in.read_string ();
         String $result = null;
         $result = this.cancelBooking (bookingID, userID);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // RoomRecordsObj/RoomRecordsCorba/changeReservation
       {
         String bookingID = in.read_string ();
         String newCampusName = in.read_string ();
         int newRoomNum = in.read_long ();
         String newTimeSlot = in.read_string ();
         String dateText = in.read_string ();
         String userID = in.read_string ();
         String $result = null;
         $result = this.changeReservation (bookingID, newCampusName, newRoomNum, newTimeSlot, dateText, userID);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 6:  // RoomRecordsObj/RoomRecordsCorba/shutdown
       {
         this.shutdown ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:RoomRecordsObj/RoomRecordsCorba:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public RoomRecordsCorba _this() 
  {
    return RoomRecordsCorbaHelper.narrow(
    super._this_object());
  }

  public RoomRecordsCorba _this(org.omg.CORBA.ORB orb) 
  {
    return RoomRecordsCorbaHelper.narrow(
    super._this_object(orb));
  }


} // class RoomRecordsCorbaPOA
